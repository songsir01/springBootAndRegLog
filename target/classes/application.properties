spring.datasource.url=jdbc:mysql://localhost:3306/practice?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
mybatis.typeAliasesPackage=com.test.pojo
mybatis.mapperLocations=classpath:/mapper/*.xml
spring.mvc.view.prefix=/WEB-INF/pages/
spring.mvc.view.suffix=.jsp
server.port=80
#Redis测试地址配置
spring.redis.cluster.nodes=172.16.200.68:10001

#下面为连接池的补充设置，应用到上面所有数据源中
#初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
#配置获取链接等待超时的时间
spring.datasource.maxWait=60000
#配置一个连接在池中最小生存时间，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
#打开PSCache 并且指定每个链接上PSCahce的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filter，去掉后监控界面sql无法统计，‘wall’用于防火墙
spring.datasource.filters=stat,wall,log4j
#通过connectProperties属性来打开mergeSql功能，慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#使用CGLIB来实现AOP
spring.aop.proxy-target-class=true